{"mappings":"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","sources":["dist-src/easy-three.js","dist-src/var/default.js","dist-src/base/prep.js","dist-src/base/animate.js","dist-src/create/main.js","dist-src/create/mesh/object.js","dist-src/create/mesh/cube.js","dist-src/create/mesh/sphere.js","dist-src/create/mesh/plane.js","dist-src/create/mesh/torus.js","dist-src/create/mesh/torusKnot.js","dist-src/create/lights/directionalLight.js","dist-src/create/lights/pointLight.js","dist-src/create/lights/ambientLight.js","dist-src/create/misc/fog.js","dist-src/create/misc/group.js","dist-src/create/misc/textTexture.js","dist-src/create/misc/text.js","dist-src/postprocessing/main.js","dist-src/postprocessing/bloom.js","dist-src/postprocessing/selectedBloom.js","dist-src/postprocessing/pixel.js","dist-src/postprocessing/mask.js","dist-src/postprocessing/glitch.js","dist-src/load/main.js","dist-src/load/background.js","dist-src/load/texture.js","dist-src/load/gltf.js","dist-src/load/vrm.js","dist-src/load/videoTexture.js","dist-src/load/cubeTexture.js","dist-src/helper/main.js","dist-src/helper/axes.js","dist-src/helper/grid.js","dist-src/event/main.js","dist-src/event/mouse.js","dist-src/event/key.js"],"sourcesContent":["import * as THREE from 'three'\n\nimport _Default from './var/default.js'\nimport prep from './base/prep.js'\nimport _animate from './base/animate.js'\nimport addCreate from './create/main.js'\nimport addPostprocessing from './postprocessing/main.js';\nimport addLoad from './load/main.js';\nimport addHelper from './helper/main.js';\nimport addEvent from './event/main.js'\n\nexport function init(targetName) {\n  const Default = _Default\n  const {\n    domElement,\n    scene,\n    camera,\n    renderer,\n    controls,\n    sizeTarget,\n    sizeTargetResize,\n    windowResize,\n    color,\n    noToneMapping,\n    destroy,\n  } = prep({ targetName, THREE })\n\n  const create = {}\n  addCreate({ create, Default, scene, THREE })\n  const animate = _animate({ controls, renderer, scene, camera, THREE })\n\n  const helper = {}\n  addHelper({ helper, scene, THREE })\n\n  const postprocessing = {}\n  addPostprocessing({ postprocessing, renderer, camera, scene, THREE, color, sizeTarget, Default })\n\n  const load = {}\n  addLoad({ load, Default, THREE, scene })\n\n  const event = {}\n  addEvent({ Default, THREE, event, domElement })\n\n  return {\n    Default,\n    scene,\n    camera,\n    renderer,\n    controls,\n    create,\n    load,\n    helper,\n    event,\n    animate,\n    THREE,\n    color,\n    postprocessing,\n    noToneMapping,\n    destroy,\n  }\n}","const Default = {\n  material: \"Physical\",\n  color: 0x1155ff,\n  texture: {\n    wrapping: \"Repeat\"\n  },\n  event: {\n    type: \"once\",\n    keyTrigger: /^[A-Za-z]$/\n  },\n  layer: {\n    bloom: 999,\n  },\n  shader: {\n    vertexShader: `varying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}`,\n    fragmentShader: `uniform sampler2D baseTexture;\nuniform sampler2D bloomTexture;\nvarying vec2 vUv;\nvoid main() {\n  gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n}`\n  },\n}\n\nexport default Default","import { OrbitControls } from 'three/addons/controls/OrbitControls.js'\n\nconst prep = ({ targetName, THREE }) => {\n  const domElement = targetName ?\n    (typeof targetName === \"string\" ? document.querySelector(targetName) : targetName) :\n    document.body;\n\n  const scene = new THREE.Scene()\n\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n\n  const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  renderer.shadowMap.enabled = true\n  renderer.setPixelRatio(window.devicePixelRatio)\n  //renderer.outputEncoding = THREE.sRGBEncoding;\n  renderer.toneMapping = THREE.ACESFilmicToneMapping;\n\n\n  const controls = new OrbitControls(camera, renderer.domElement)\n  controls.enableDamping = true\n  controls.dampingFactor = 0.25\n  controls.disconnect()\n\n\n  const sizeTarget = domElement === document.body ? window : domElement;\n  if (sizeTarget === window) {\n    domElement.style.margin = 0\n    renderer.setSize(sizeTarget.innerWidth, sizeTarget.innerHeight)\n  } else {\n    renderer.setSize(sizeTarget.scrollWidth, sizeTarget.scrollHeight)\n    camera.aspect = sizeTarget.scrollWidth / sizeTarget.scrollHeight\n    camera.updateProjectionMatrix()\n  }\n  domElement.appendChild(renderer.domElement)\n\n  function sizeTargetResize() {\n    if (sizeTarget === window) {\n      renderer.setSize(sizeTarget.innerWidth, sizeTarget.innerHeight)\n      camera.aspect = sizeTarget.innerWidth / sizeTarget.innerHeight\n    } else {\n      renderer.setSize(sizeTarget.scrollWidth, sizeTarget.scrollHeight)\n      camera.aspect = sizeTarget.scrollWidth / sizeTarget.scrollHeight\n    }\n    camera.updateProjectionMatrix()\n  }\n  sizeTarget.addEventListener(\"resize\", sizeTargetResize)\n\n  function windowResize() {\n    renderer.setSize(sizeTarget.scrollWidth, sizeTarget.scrollHeight, false)\n    camera.aspect = sizeTarget.scrollWidth / sizeTarget.scrollHeight\n    camera.updateProjectionMatrix()\n  }\n  if (sizeTarget !== window) {\n    window.addEventListener(\"resize\", windowResize)\n  }\n\n  renderer.domElement.style.aspectRatio = renderer.domElement.width / renderer.domElement.height;\n  renderer.domElement.style.width = \"100%\"\n  renderer.domElement.style.height = \"auto\"\n\n  function color(col) {\n    return new THREE.Color(col)\n  }\n\n  function destroy() {\n    sizeTarget.removeEventListener(\"resize\", sizeTargetResize)\n    if (sizeTarget !== window) {\n      window.removeEventListener(\"resize\", windowResize)\n    }\n    domElement.removeChild(renderer.domElement);\n    renderer.dispose();\n    renderer.forceContextLoss();\n  }\n\n  function noToneMapping() {\n    renderer.toneMapping = THREE.NoToneMapping;\n  }\n\n\n  return {\n    domElement,\n    scene,\n    camera,\n    renderer,\n    controls,\n    sizeTarget,\n    sizeTargetResize,\n    windowResize,\n    color,\n    noToneMapping,\n    destroy,\n  }\n}\n\nexport default prep\n","const animate = ({ controls, renderer, scene, camera, THREE }) => {\n  return (proc = () => { }, renderFlag = true) => {\n    const clock = new THREE.Clock();\n    function loop() {\n      controls.update()\n      const delta = clock.getDelta()\n      const time = clock.getElapsedTime()\n      proc({ clock, delta, time })\n      if (renderFlag) renderer.render(scene, camera)\n    }\n    renderer.setAnimationLoop(loop)\n  }\n}\n\nexport default animate\n","// mesh\nimport object from './mesh/object.js';\nimport cube from './mesh/cube.js';\nimport sphere from './mesh/sphere.js';\nimport plane from './mesh/plane.js';\nimport torus from './mesh/torus.js';\nimport torusKnot from './mesh/torusKnot.js';\n// lights\nimport directionalLight from './lights/directionalLight.js';\nimport pointLight from './lights/pointLight.js';\nimport ambientLight from './lights/ambientLight.js';\n// misc\nimport fog from './misc/fog.js';\nimport group from './misc/group.js';\nimport textTexture from './misc/textTexture.js';\nimport text from './misc/text.js';\n\nconst use = [\n  // mesh\n  { name: \"object\", fn: object },\n  { name: 'cube', fn: cube },\n  { name: 'box', fn: cube },\n  { name: 'sphere', fn: sphere },\n  { name: 'plane', fn: plane },\n  { name: 'torus', fn: torus },\n  { name: 'torusKnot', fn: torusKnot },\n  // lights\n  { name: 'directionalLight', fn: directionalLight },\n  { name: 'pointLight', fn: pointLight },\n  { name: 'ambientLight', fn: ambientLight },\n  // misc\n  { name: 'fog', fn: fog },\n  { name: 'group', fn: group },\n  { name: 'textTexture', fn: textTexture },\n  { name: 'text', fn: text },\n]\n\nfunction sizeToArray(size, n = 3) {\n  return isNaN(size) ? size : Array(n).fill(size)\n}\n\nconst addCreate = ({ Default, create, scene, THREE }) => {\n  use.forEach((v) => {\n    create[v.name] = v.fn({ Default, create, scene, sizeToArray, THREE });\n  })\n}\n\nexport default addCreate\n","const object = ({ Default, scene, THREE }) => {\n  return (geometry, {\n    args = [1, 1, 1],\n    position = [0, 0, 0],\n    rotation = [0, 0, 0],\n    option = {\n      color: Default.color,\n    },\n    material = Default.material,\n    castShadow = true,\n    receiveShadow = true,\n    autoAdd = true,\n  } = {}) => {\n    const m = new THREE.Mesh(\n      //new THREE[geometry](...args),\n      new geometry(...args),\n      new THREE[`Mesh${material}Material`](material === \"Normal\" ? {} : option)\n    )\n    m.position.set(...position)\n    m.rotation.set(...rotation)\n    m.castShadow = castShadow\n    m.receiveShadow = receiveShadow\n    if (autoAdd) scene.add(m);\n    return m;\n  }\n}\n\nexport default object","import { RoundedBoxGeometry } from \"three/addons/geometries/RoundedBoxGeometry.js\";\n\nconst cube = ({ create, sizeToArray, THREE }) => {\n  return ({\n    size = 1,\n    segments = 1,\n    rounded = false,\n    radius = 0.1,\n    ...props\n  } = {}) => {\n    return create.object(rounded ? RoundedBoxGeometry : THREE.BoxGeometry, {\n      ...props,\n      args: [\n        ...sizeToArray(size, 3),\n        ...(rounded ? [segments, radius] : sizeToArray(segments, 3))\n      ]\n    });\n  }\n}\n\nexport default cube","const sphere = ({ create, THREE, sizeToArray }) => {\n  return ({ size = 1, segments = 64, ...props } = {}) => {\n    return create.object(THREE.SphereGeometry, {\n      ...props,\n      args: [...sizeToArray(size, 1), ...sizeToArray(segments, 2)]\n    });\n  }\n}\n\nexport default sphere\n","const plane = ({ create, THREE, sizeToArray }) => {\n  return ({ size = 1, segments = 1, ...props } = {}) => {\n    return create.object(THREE.PlaneGeometry, {\n      ...props,\n      args: [...sizeToArray(size, 2), ...sizeToArray(segments, 2)]\n    });\n  }\n}\n\nexport default plane\n","const torus = ({ create, THREE, sizeToArray }) => {\n  return ({ size = 1, tube = 0.4, segments = 64, ...props } = {}) => {\n    return create.object(THREE.TorusGeometry, {\n      ...props,\n      args: [size, tube, ...sizeToArray(segments, 2)]\n    });\n  }\n}\n\nexport default torus\n","const torusKnot = ({ create, THREE, sizeToArray }) => {\n  return ({ size = 1, tube = 0.3, segments = [128, 8], ...props } = {}) => {\n    return create.object(THREE.TorusKnotGeometry, {\n      ...props,\n      args: [size, tube, ...sizeToArray(segments, 2)]\n    });\n  }\n}\n\nexport default torusKnot\n","const directionalLight = ({ scene, THREE }) => {\n  return ({\n    intensity = 1,\n    color = 0xffffff,\n    position = [10, 10, 10],\n    castShadow = true,\n    shadow = {\n      mapSize: {\n        width: 1024,\n        height: 1024,\n      },\n      camera: {\n        left: -10,\n        right: 10,\n        top: 10,\n        bottom: -10,\n      }\n    },\n  } = {}) => {\n    const l = new THREE.DirectionalLight(color, intensity)\n    l.position.set(...position)\n    l.castShadow = castShadow\n    if (castShadow) {\n      l.shadow.mapSize.width = shadow.mapSize.width\n      l.shadow.mapSize.height = shadow.mapSize.height\n      l.shadow.camera.left = shadow.camera.left\n      l.shadow.camera.right = shadow.camera.right\n      l.shadow.camera.top = shadow.camera.top\n      l.shadow.camera.bottom = shadow.camera.bottom\n    }\n    scene.add(l);\n    return l;\n  }\n}\n\nexport default directionalLight\n","const pointLight = ({ scene, THREE }) => {\n  return ({\n    color = 0xffffff,\n    intensity = 1,\n    distance = 0,\n    decay = 2,\n    position = [6, 6, 6],\n    castShadow = true,\n    shadow = {\n      mapSize: [1024, 1024],\n    },\n  } = {}) => {\n    const l = new THREE.PointLight(color, intensity, distance, decay)\n    l.position.set(...position)\n    l.castShadow = castShadow\n    if (castShadow) {\n      l.shadow.mapSize = shadow.mapSize\n    }\n    scene.add(l);\n    return l;\n  }\n}\n\nexport default pointLight\n","const ambientLight = ({ scene, THREE }) => {\n  return ({\n    color = 0xffffff,\n    intensity = 0.5,\n  } = {}) => {\n    const l = new THREE.AmbientLight(color, intensity)\n    scene.add(l);\n    return l;\n  }\n}\n\nexport default ambientLight\n","const fog = ({ scene, THREE }) => {\n  return ({\n    color = 0xffffff,\n    near = 1,\n    far = 1000,\n  } = {}) => {\n    scene.fog = new THREE.Fog(color, near, far);\n    return scene.fog;\n  }\n}\n\nexport default fog\n","const group = ({ THREE, scene }) => {\n  return ({\n    position = [0, 0, 0],\n    rotation = [0, 0, 0],\n    children = [],\n    autoAdd = true,\n    ...props\n  } = {}) => {\n    const result = new THREE.Group();\n    result.position.set(...position);\n    result.rotation.set(...rotation);\n    children.forEach((c) => {\n      if (c instanceof THREE.Object3D) {\n        result.add(c);\n      }\n    });\n    if (autoAdd) scene.add(result);\n    return result;\n  }\n}\n\nexport default group\n","const textTexture = ({ THREE }) => {\n  return (text, {\n    fontSize = 48,\n    font = \"'Noto Sans JP', sans-serif\",\n    fontWeight = \"\",\n    color = \"#000000\",\n    size = [500, 500],\n    textAlign = \"center\",\n    textBaseline = \"middle\",\n    background = false,\n    guide = 0,\n    guideColor = \"#ff0000\",\n  } = {}) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = size[0];\n    canvas.height = size[1];\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = guideColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    if (background) {\n      ctx.fillStyle = background;\n      ctx.fillRect(guide, guide, canvas.width - guide * 2, canvas.height - guide * 2);\n    } else {\n      ctx.clearRect(guide, guide, canvas.width - guide * 2, canvas.height - guide * 2);\n    }\n    ctx.font = `${fontWeight} ${fontSize}px ${font}`;\n    ctx.fillStyle = color;\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n    ctx.fillText(text, canvas.width / 2, canvas.height / 2);\n    const texture = new THREE.CanvasTexture(canvas);\n    texture.colorSpace = THREE.SRGBColorSpace;\n    return texture;\n  }\n}\n\nexport default textTexture\n","const text = ({ create, THREE, sizeToArray, scene }) => {\n  return (text, {\n    fontSize = 48,\n    font = \"'Noto Sans JP', sans-serif\",\n    fontWeight = \"\",\n    position = [0, 0, 0],\n    rotation = [0, 0, 0],\n    color = \"#000000\",\n    size = 1,\n    resolution = 1,\n    textAlign = \"center\",\n    textBaseline = \"middle\",\n    background = false,\n    side = \"DoubleSide\",\n    autoAdd = true,\n    guide = 0,\n    guideColor = \"#ff0000\",\n  } = {}) => {\n    const s = sizeToArray(size, 2);\n    const texture = create.textTexture(text, {\n      fontSize: fontSize * resolution,\n      font,\n      fontWeight,\n      color,\n      size: [s[0] * 100 * resolution, s[1] * 100 * resolution],\n      textAlign,\n      textBaseline,\n      background,\n      guide,\n      guideColor,\n    });\n    const material = new THREE.MeshBasicMaterial({\n      transparent: true,\n      map: texture,\n      side: THREE[side],\n    });\n    const geometry = new THREE.PlaneGeometry(...s);\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(...position);\n    mesh.rotation.set(...rotation);\n    if (autoAdd) scene.add(mesh);\n    return mesh;\n  }\n}\n\nexport default text\n","import bloom from './bloom.js'\nimport selectedBloom from './selectedBloom.js'\nimport pixel from './pixel.js'\nimport mask from './mask.js'\nimport glitch from './glitch.js'\n\nconst use = [\n  { name: \"bloom\", fn: bloom },\n  { name: \"selectedBloom\", fn: selectedBloom },\n  { name: \"pixel\", fn: pixel },\n  { name: \"mask\", fn: mask },\n  { name: \"glitch\", fn: glitch },\n]\n\n\nconst addPostprocessing = ({ renderer, camera, scene, THREE, postprocessing, color, sizeTarget, Default }) => {\n  use.forEach((v) => {\n    postprocessing[v.name] = v.fn({ renderer, camera, scene, THREE, color, sizeTarget, Default });\n  })\n}\n\nexport default addPostprocessing\n","import { EffectComposer } from \"three/addons/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/addons/postprocessing/RenderPass.js\";\nimport { UnrealBloomPass } from \"three/addons/postprocessing/UnrealBloomPass.js\";\nimport { OutputPass } from \"three/addons/postprocessing/OutputPass.js\";\n\nconst bloom = ({ renderer, scene, camera, THREE, color, sizeTarget }) => {\n  return ({\n    exposure = 1,\n    background = 0x000000,\n    threshold = 0,\n    strength = 1,\n    radius = 0.5,\n  } = {}) => {\n    renderer.toneMappingExposure = Math.pow(exposure, 4.0);\n    scene.background = color(background);\n    const renderScene = new RenderPass(scene, camera);\n    const bloomPass = new UnrealBloomPass(\n      new THREE.Vector2(sizeTarget.scrollWidth, sizeTarget.scrollHeight),\n      1.5,\n      0.4,\n      0.85\n    );\n    bloomPass.threshold = threshold;\n    bloomPass.strength = strength;\n    bloomPass.radius = radius;\n    const outputPass = new OutputPass();\n    const composer = new EffectComposer(renderer);\n    composer.addPass(renderScene);\n    composer.addPass(bloomPass);\n    composer.addPass(outputPass);\n    const p = {\n      threshold, strength, radius\n    }\n    return {\n      bloom: ({\n        threshold = p.threshold,\n        strength = p.strength,\n        radius = p.radius,\n      } = {}) => {\n        bloomPass.threshold = threshold;\n        bloomPass.strength = strength;\n        bloomPass.radius = radius;\n        composer.render();\n      }\n    }\n  }\n}\n\nexport default bloom\n","import { EffectComposer } from \"three/addons/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/addons/postprocessing/RenderPass.js\";\nimport { UnrealBloomPass } from \"three/addons/postprocessing/UnrealBloomPass.js\";\nimport { OutputPass } from \"three/addons/postprocessing/OutputPass.js\";\nimport { ShaderPass } from \"three/addons/postprocessing/ShaderPass.js\";\n\nconst selectedBloom = ({ renderer, scene, camera, THREE, color, sizeTarget, Default }) => {\n  return ({\n    exposure = 1,\n    background = false,\n    threshold = 0,\n    strength = 1,\n    radius = 0.5,\n  } = {}) => {\n    renderer.toneMappingExposure = Math.pow(exposure, 4.0);\n    if (background) scene.background = color(background);\n    const bloomLayer = new THREE.Layers();\n    bloomLayer.set(Default.layer.bloom);\n    const renderScene = new RenderPass(scene, camera);\n    const bloomPass = new UnrealBloomPass(\n      new THREE.Vector2(sizeTarget.scrollWidth, sizeTarget.scrollHeight),\n      1.5,\n      0.4,\n      0.85\n    );\n    bloomPass.threshold = threshold;\n    bloomPass.strength = strength;\n    bloomPass.radius = radius;\n    const bloomComposer = new EffectComposer(renderer);\n    bloomComposer.renderToScreen = false;\n    bloomComposer.addPass(renderScene);\n    bloomComposer.addPass(bloomPass);\n    const mixPass = new ShaderPass(\n      new THREE.ShaderMaterial({\n        uniforms: {\n          baseTexture: { value: null },\n          bloomTexture: { value: bloomComposer.renderTarget2.texture },\n        },\n        vertexShader: Default.shader.vertexShader,\n        fragmentShader: Default.shader.fragmentShader,\n        defines: {},\n      }),\n      \"baseTexture\"\n    );\n    mixPass.needsSwap = true;\n    const outputPass = new OutputPass();\n    const finalComposer = new EffectComposer(renderer);\n    finalComposer.addPass(renderScene);\n    finalComposer.addPass(mixPass);\n    finalComposer.addPass(outputPass);\n    const darkMaterial = new THREE.MeshBasicMaterial({ color: \"black\" });\n    const materials = {}\n    let bg = scene.background;\n    const p = {\n      threshold, strength, radius\n    }\n    return {\n      selectedBloom: ({\n        threshold = p.threshold,\n        strength = p.strength,\n        radius = p.radius,\n      } = {}) => {\n        bloomPass.threshold = threshold;\n        bloomPass.strength = strength;\n        bloomPass.radius = radius;\n        scene.traverse((obj) => {\n          if (obj.isMesh && bloomLayer.test(obj.layers) === false) {\n            materials[obj.uuid] = obj.material;\n            obj.material = darkMaterial;\n          } else if (/Helper$/.test(obj.type) && bloomLayer.test(obj.layers) === false) {\n            materials[obj.uuid] = obj.material;\n            obj.material = darkMaterial;\n          }\n        });\n        bg = scene.background;\n        scene.background = color(0x000000);\n        bloomComposer.render();\n        scene.background = bg;\n        scene.traverse(obj => {\n          if (materials[obj.uuid]) {\n            obj.material = materials[obj.uuid];\n            delete materials[obj.uuid];\n          }\n        })\n        finalComposer.render();\n      },\n      addSelectedBloom: (...list) => {\n        list.forEach((obj) => {\n          obj.layers.enable(Default.layer.bloom);\n        });\n      }\n    }\n  }\n}\n\nexport default selectedBloom\n","import { EffectComposer } from \"three/addons/postprocessing/EffectComposer.js\";\nimport { OutputPass } from \"three/addons/postprocessing/OutputPass.js\";\nimport { RenderPixelatedPass } from 'three/addons/postprocessing/RenderPixelatedPass.js';\n\nconst pixel = ({ renderer, scene, camera }) => {\n  return ({\n    size = 6,\n    normalEdge = 0.3,\n    depthEdge = 0.4,\n  } = {}) => {\n    const composer = new EffectComposer(renderer);\n    const renderPixelatedPass = new RenderPixelatedPass(size, scene, camera);\n    composer.addPass(renderPixelatedPass);\n    const outputPass = new OutputPass();\n    composer.addPass(outputPass);\n    const p = {\n      size, normalEdge, depthEdge\n    }\n    return {\n      pixel: ({\n        size = p.size,\n        normalEdge = p.normalEdge,\n        depthEdge = p.depthEdge,\n      } = {}) => {\n        renderPixelatedPass.setPixelSize(size);\n        renderPixelatedPass.normalEdge = normalEdge;\n        renderPixelatedPass.depthEdge = depthEdge;\n        composer.render();\n      }\n    }\n  }\n}\n\nexport default pixel\n","import { EffectComposer } from \"three/addons/postprocessing/EffectComposer.js\";\nimport { OutputPass } from \"three/addons/postprocessing/OutputPass.js\";\nimport { ClearPass } from 'three/addons/postprocessing/ClearPass.js';\nimport { MaskPass, ClearMaskPass } from 'three/addons/postprocessing/MaskPass.js';\nimport { TexturePass } from 'three/addons/postprocessing/TexturePass.js';\n\nconst mask = ({ renderer, scene, camera, THREE, sizeTarget }) => {\n  return (texture) => {\n    renderer.autoClear = false;\n    const clearPass = new ClearPass();\n    const clearMaskPass = new ClearMaskPass();\n    const maskPass = new MaskPass(scene, camera);\n    const texturePass = new TexturePass(texture);\n    const outputPass = new OutputPass();\n    const renderTarget = new THREE.WebGLRenderTarget(sizeTarget.scrollWidth, sizeTarget.scrollHeight, {\n      stencilBuffer: true,\n    });\n    const composer = new EffectComposer(renderer, renderTarget);\n    composer.addPass(clearPass);\n    composer.addPass(maskPass);\n    composer.addPass(texturePass);\n    composer.addPass(clearMaskPass);\n    composer.addPass(outputPass);\n    return {\n      mask: (time) => {\n        renderer.clear();\n        composer.render(time);\n      }\n    }\n  }\n}\n\nexport default mask\n","import { EffectComposer } from \"three/addons/postprocessing/EffectComposer.js\";\nimport { OutputPass } from \"three/addons/postprocessing/OutputPass.js\";\nimport { GlitchPass } from 'three/addons/postprocessing/GlitchPass.js';\nimport { RenderPass } from \"three/addons/postprocessing/RenderPass.js\";\n\nconst glitch = ({ renderer, scene, camera }) => {\n  return ({\n    wild = false\n  } = {}) => {\n    const composer = new EffectComposer(renderer);\n    composer.addPass(new RenderPass(scene, camera));\n    const glitchPass = new GlitchPass();\n    composer.addPass(glitchPass);\n    const outputPass = new OutputPass();\n    composer.addPass(outputPass);\n    glitchPass.goWild = wild;\n    const p = {\n      wild\n    }\n    return {\n      glitch: ({\n        wild = p.wild\n      } = {}) => {\n        glitchPass.goWild = wild;\n        composer.render();\n      }\n    }\n  }\n}\n\nexport default glitch\n","import background from \"./background.js\";\nimport texture from \"./texture.js\";\nimport gltf from \"./gltf.js\";\nimport vrm from \"./vrm.js\";\nimport videoTexture from \"./videoTexture.js\";\nimport cubeTexture from \"./cubeTexture.js\";\n\nconst use = [\n  { name: \"background\", fn: background },\n  { name: \"texture\", fn: texture },\n  { name: \"gltf\", fn: gltf },\n  { name: \"vrm\", fn: vrm },\n  { name: \"videoTexture\", fn: videoTexture },\n  { name: \"cubeTexture\", fn: cubeTexture },\n]\n\n\nconst addLoad = ({ Default, THREE, load, scene }) => {\n  use.forEach((v) => {\n    load[v.name] = v.fn({ Default, THREE, scene });\n  })\n}\n\nexport default addLoad\n","import { RGBELoader } from \"three/addons/loaders/RGBELoader.js\";\n\nconst background = ({ THREE, scene }) => {\n  return (url, {\n    background = true,\n    environment = true\n  } = {}) => {\n    const t = new RGBELoader().load(url, (texture) => {\n      texture.mapping = THREE.EquirectangularReflectionMapping\n      if (background) scene.background = texture\n      if (environment) scene.environment = texture\n    })\n    return t;\n  }\n}\n\nexport default background\n","const texture = ({ Default, THREE }) => {\n  return (url, {\n    wrapS = Default.texture.wrapping,\n    wrapT = Default.texture.wrapping,\n    repeat = [1, 1]\n  } = {}) => {\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load(url);\n    texture.wrapS = THREE[`${wrapS}Wrapping`];\n    texture.wrapT = THREE[`${wrapT}Wrapping`];\n    texture.repeat = new THREE.Vector2(...repeat);\n    texture.colorSpace = THREE.SRGBColorSpace;\n    return texture;\n  }\n}\n\nexport default texture\n","import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n\nconst gltf = ({ scene }) => {\n  return async (url, {\n    position = [0, 0, 0],\n    rotation = [0, 0, 0],\n    scale = [1, 1, 1],\n    autoAdd = true\n  } = {}) => {\n    const gltf = await new GLTFLoader().loadAsync(url);\n    gltf.scene.position.set(...position);\n    gltf.scene.rotation.set(...rotation);\n    gltf.scene.scale.set(...scale);\n    if (autoAdd) scene.add(gltf.scene);\n    return gltf;\n  }\n}\n\nexport default gltf\n","import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { VRMLoaderPlugin, VRMUtils } from '@pixiv/three-vrm';\n\nconst vrm = ({ scene }) => {\n  return async (url, {\n    position = [0, 0, 0],\n    rotation = [0, 0, 0],\n    scale = [1, 1, 1],\n    autoAdd = true,\n    onProgress = (p) => { },\n  } = {}) => {\n    const vrmLoader = new GLTFLoader();\n    vrmLoader.register(parser => new VRMLoaderPlugin(parser));\n    const gltf = await vrmLoader.loadAsync(url, onProgress);\n    const model = gltf.userData.vrm;\n    VRMUtils.removeUnnecessaryVertices(model.scene);\n    //VRMUtils.removeUnnecessaryJoints(model.scene); // deprecated\n    VRMUtils.combineSkeletons(model.scene);\n    model.scene.traverse((obj) => {\n      obj.frustumCulled = false;\n      if (obj.isMesh) {\n        obj.castShadow = true;\n      }\n    });\n    model.scene.position.set(...position);\n    model.scene.rotation.set(...rotation);\n    model.scene.scale.set(...scale);\n    model.bone = (name) => model.humanoid.getNormalizedBoneNode(name);\n    model.dispose = () => {\n      scene.remove(model.scene);\n      VRMUtils.deepDispose(model.scene);\n    }\n    if (autoAdd) scene.add(model.scene);\n    return model;\n  }\n}\n\nexport default vrm\n","const videoTexture = ({ THREE }) => {\n  return (url, {\n    autoPlay = true,\n    loop = true,\n  } = {}) => {\n    const video = document.createElement(\"video\");\n    video.crossOrigin = \"anonymous\";\n    video.onloadeddata = () => {\n      video.play();\n    }\n    //video.muted = true;\n    video.loop = loop;\n    video.setAttribute(\"playsinline\", \"\")\n    video.setAttribute(\"muted\", \"\")\n    if (autoPlay) video.setAttribute(\"autoplay\", \"\");\n\n    video.src = url;\n    const texture = new THREE.VideoTexture(video);\n    texture.colorSpace = THREE.SRGBColorSpace;\n    return texture;\n  }\n}\n\nexport default videoTexture\n","const cubeTexture = ({ THREE }) => {\n  return (urls, {\n    path = \"./\"\n  } = {}) => {\n    const texture = new THREE.CubeTextureLoader().setPath(path).load(urls);\n    return texture;\n  }\n}\n\nexport default cubeTexture\n","import axes from \"./axes.js\";\nimport grid from \"./grid.js\";\n\nconst use = [\n  { name: \"axes\", fn: axes },\n  { name: \"grid\", fn: grid },\n]\n\n\nconst addHelper = ({ THREE, scene, helper }) => {\n  use.forEach((v) => {\n    helper[v.name] = v.fn({ THREE, scene });\n  })\n}\n\nexport default addHelper\n","const axes = ({ scene, THREE }) => {\n  return ({\n    size = 10,\n  } = {}) => {\n    const a = new THREE.AxesHelper(size)\n    a.position.y = 0.01\n    scene.add(a)\n    return a;\n  }\n}\n\nexport default axes\n","const grid = ({ scene, THREE }) => {\n  return ({\n    size = 10,\n    divisions = 10,\n    colorCenterLine = 0x444444,\n    colorGrid = 0x888888,\n  } = {}) => {\n    const g = new THREE.GridHelper(size, divisions, colorCenterLine, colorGrid)\n    g.position.y = 0.005\n    scene.add(g)\n    return g;\n  }\n}\n\nexport default grid\n","import mouse from \"./mouse.js\";\nimport key from \"./key.js\";\n\nconst use = [\n  { name: \"mouse\", fn: mouse },\n  { name: \"key\", fn: key },\n]\n\n\nconst addEvent = ({ Default, THREE, event, domElement }) => {\n  use.forEach((v) => {\n    event[v.name] = v.fn({ Default, THREE, event, domElement });\n  })\n}\n\nexport default addEvent\n","const mouse = ({ Default, THREE, domElement, event }) => {\n  return class {\n    static #eventList = {\n      click: [],\n      mousedown: [],\n      mouseup: [],\n      mousemove: []\n    };\n    static #id = 0;\n    static #idMap = {};\n\n    static {\n      domElement.addEventListener(\"click\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const pos = new THREE.Vector2(e.clientX - rect.x, e.clientY - rect.y);\n        this.#eventList.click.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n      domElement.addEventListener(\"mousedown\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const pos = new THREE.Vector2(e.clientX - rect.x, e.clientY - rect.y);\n        this.#eventList.mousedown.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n      domElement.addEventListener(\"mouseup\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const pos = new THREE.Vector2(e.clientX - rect.x, e.clientY - rect.y);\n        this.#eventList.mouseup.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n      domElement.addEventListener(\"mousemove\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const pos = new THREE.Vector2(e.clientX - rect.x, e.clientY - rect.y);\n        this.#eventList.mousemove.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n      domElement.addEventListener(\"touchstart\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const touch = e.changedTouches[0];\n        const pos = new THREE.Vector2(touch.clientX - rect.x, touch.clientY - rect.y);\n        this.#eventList.mousedown.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n      domElement.addEventListener(\"touchend\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const touch = e.changedTouches[0];\n        const pos = new THREE.Vector2(touch.clientX - rect.x, touch.clientY - rect.y);\n        this.#eventList.mouseup.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n      domElement.addEventListener(\"touchmove\", (e) => {\n        const target = e.target;\n        const rect = target.getBoundingClientRect();\n        const touch = e.changedTouches[0];\n        const pos = new THREE.Vector2(touch.clientX - rect.x, touch.clientY - rect.y);\n        this.#eventList.mousemove.forEach((callback) => {\n          callback(pos, e);\n        });\n      });\n\n    }\n\n    static #addMap(key, index) {\n      if (this.#idMap[this.#id] === undefined) this.#idMap[this.#id] = {};\n      if (this.#idMap[this.#id][key] === undefined) this.#idMap[this.#id][key] = [];\n      this.#idMap[this.#id][key].push(index);\n    }\n\n    static add(callback = () => { }, {\n      type = Default.event.type\n    } = {}) {\n      const listener = {\n        once: \"click\",\n        down: \"mousedown\",\n        up: \"mouseup\",\n        move: \"mousemove\"\n      };\n      if (typeof (type) === \"string\") {\n        if (type === \"all\") {\n          Object.entries(this.#eventList).forEach(([key, list]) => {\n            this.#addMap(`${key}`, list.length);\n            list.push(callback);\n          });\n          const _id = this.#id;\n          const result = () => {\n            event.mouse.remove(_id);\n          }\n          this.#id++;\n          return result;\n        }\n        if (this.#eventList[listener[type]] !== undefined) {\n          this.#addMap(listener[type], this.#eventList[listener[type]].length);\n          this.#eventList[listener[type]].push(callback);\n          const _id = this.#id;\n          const result = () => {\n            event.mouse.remove(_id);\n          }\n          this.#id++;\n          return result;\n        }\n      }\n    }\n\n    static remove(id) {\n      Object.entries(this.#idMap[id])?.forEach(([key, list]) => {\n        list.forEach(index => {\n          this.#eventList[key][index] = () => { };\n        });\n      });\n    }\n  }\n}\n\nexport default mouse\n","const key = ({ Default, domElement, event }) => {\n  return class {\n    static #eventList = {\n      keypress: [],\n      keydown: [],\n      keyup: []\n    };\n    static #id = 0;\n    static #idMap = {};\n\n    static {\n      domElement.addEventListener(\"keypress\", (e) => {\n        this.#eventList.keypress.forEach((callback) => {\n          callback(e.key, e);\n        });\n      });\n      domElement.addEventListener(\"keydown\", (e) => {\n        this.#eventList.keydown.forEach((callback) => {\n          callback(e.key, e);\n        });\n      });\n      domElement.addEventListener(\"keyup\", (e) => {\n        this.#eventList.keyup.forEach((callback) => {\n          callback(e.key, e);\n        });\n      });\n    }\n\n    static #addMap(key, index) {\n      if (this.#idMap[this.#id] === undefined) this.#idMap[this.#id] = {};\n      if (this.#idMap[this.#id][key] === undefined) this.#idMap[this.#id][key] = [];\n      this.#idMap[this.#id][key].push(index);\n    }\n\n    static #wrapCallback(callback, trigger) {\n      let result;\n      if (trigger instanceof RegExp) result = (key, e) => {\n        if (trigger.test(key)) callback(key, e);\n      };\n      else result = (key, e) => {\n        if (key === trigger) callback(key, e);\n      };\n\n      return result;\n    }\n\n    static add(callback = () => { }, {\n      type = Default.event.type,\n      trigger = Default.event.keyTrigger\n    } = {}) {\n      const listener = {\n        once: \"keypress\",\n        down: \"keydown\",\n        up: \"keyup\"\n      };\n      if (typeof (type) === \"string\") {\n        if (type === \"all\") {\n          Object.entries(this.#eventList).forEach(([key, list]) => {\n            this.#addMap(`${key}`, list.length);\n            list.push(this.#wrapCallback(callback, trigger));\n          });\n          const _id = this.#id;\n          const result = () => {\n            event.key.remove(_id);\n          }\n          this.#id++;\n          return result;\n        }\n        if (this.#eventList[listener[type]] !== undefined) {\n          this.#addMap(listener[type], this.#eventList[listener[type]].length);\n          this.#eventList[listener[type]].push(this.#wrapCallback(callback, trigger));\n          const _id = this.#id;\n          const result = () => {\n            event.key.remove(_id);\n          }\n          this.#id++;\n          return result;\n        }\n      }\n    }\n\n    static remove(id) {\n      Object.entries(this.#idMap[id])?.forEach(([key, list]) => {\n        list.forEach(index => {\n          this.#eventList[key][index] = () => { };\n        });\n      });\n    }\n  }\n}\n\nexport default key\n"],"names":[],"version":3,"file":"easy-three.js.map"}